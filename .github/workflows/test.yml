name: Build from source and make a new release on GitHub

on:
  push:
    branches:
      - dev

jobs:
  generate-linux:
    name: Generate Linux binary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-go@v1
        with:
          go-version: "1.15.3"

      - name: Build from source
        run: |
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags "-s -w" -o ./bin/wait-for-it_linux

  generate-windows:
    name: Generate Windows binary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-go@v1
        with:
          go-version: "1.15.3"

      - name: Build from source
        run: |
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -ldflags "-s -w" -o ./bin/wait-for-it_windows

  generate-mac:
    name: Generate MacOS binary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - uses: actions/setup-go@v1
        with:
          go-version: "1.15.3"

      - name: Build from source
        run: |
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -ldflags "-s -w" -o ./bin/wait-for-it_mac


  release:
    name: Release and Upload Asset
    runs-on: ubuntu-latest
    needs: [generate-linux, generate-windows, generate-mac]
    steps:
      - uses: actions/checkout@v2

      - name: Download Linux Artifact
        uses: actions/download-artifact@v2
        with:
          name: bin
          path: ./bin
      
      - run: ls -la
      
      # - name: Increment version
      #   id: increment_version
      #   run: |
      #     git config --global user.email "roerohan@gmail.com"
      #     git config --global user.name "roerohan"
      #     git fetch --all --tags

      #     wget https://gist.githubusercontent.com/roerohan/17e08ee9ed42d97bb841033b038117bd/raw/dfe42b58f0f88e384b40e89e789619574a24de4e/gitautotag.sh
      #     chmod +x ./gitautotag.sh
      #     ./gitautotag.sh --bug

      #     echo "VERSION=$(git tag | tail -n 1)" >> $GITHUB_ENV

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ env.VERSION }}
      #     release_name: Release ${{ env.VERSION }}
      #     body: |
      #       The binary executable compiled using the following command:
      #       CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags "-s -w" -o ./bin/wait-for-it

      #     draft: false
      #     prerelease: false

      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./bin/wait-for-it
      #     asset_name: wait-for-it
      #     asset_content_type: application/octet-stream
